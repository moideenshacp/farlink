apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://farlink.moideensha.store"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE,PATCH,OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # ðŸ”¹ WebSocket Annotations
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/websocket-services: "chat-meeting-service"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - api.moideensha.store
      secretName: my-tls-secret
  rules:
  - host: api.moideensha.store
    http:
      paths:
      - path: /socket.io/
        pathType: ImplementationSpecific
        backend:
          service:
            name: chat-meeting-service
            port:
              number: 3005
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 4000
